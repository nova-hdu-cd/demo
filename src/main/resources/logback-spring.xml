<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <contextName>demo-application</contextName>

    <property name="logback.logdir" value="./logs"/>
    <property name="logback.appname" value="app"/>

    <!--ConsoleAppender把日志输出到控制台  -->
    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{YYYY-MM-dd HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!--RollingFileAppender滚动记录文件，先将日志记录到指定的文件，当符合某个条件时，将日志记录到其他文件-->
    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">

        <!--true:日志被追加到文件结尾，false：清空现存文件-->
        <append>false</append>

        <!--日志过滤器 ThresholdFilter：临界值过滤器-->
        <!--如果只是想要 Error 级别的日志，那么需要过滤一下，默认是 info 级别的，ThresholdFilter -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>Info</level>
        </filter>

        <!--
        日志名称，如果没有File 属性，那么只会使用FileNamePattern的文件路径规则
        如果同时有<File>和<FileNamePattern>，那么当天日志是<File>，明天会自动把今天
        的日志改名为今天的日期。即，<File> 的日志都是当天的。
        -->
        <File>
            ${logback.logdir}/error.${logback.appname}.log
        </File>

        <!--滚动策略，按照时间滚动 TimeBasedRollingPolicy -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">

            <!--文件路径,定义了日志的切分方式——把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间 -->
            <FileNamePattern>
                ${logback.logdir}/error.${logback.appname}.%d{yyyy-MM-dd}.log
            </FileNamePattern>

            <!--只保留最近30天的日志 -->
            <maxHistory>30</maxHistory>

            <!--用来指定日志文件的上限大小，那么到了这个值，就会删除旧的日志 -->
            <!--<totalSizeCap>1GB</totalSizeCap> -->
        </rollingPolicy>
        <!--日志输出编码格式化 -->
        <encoder>
            <charset>UTF-8</charset>
            <pattern>%d [%thread] %-5level %logger{36} %line - %msg%n</pattern>
        </encoder>
    </appender>

    <!--将com.chendong.demo包下所有产生的业务日志放入到./logs下-->
    <logger name="com.chendong.demo" level="info" additivity="false">
        <appender-ref ref="fileErrorLog"/>
    </logger>

    <!--指定最基础的日志输出级别 -->
    <root level="INFO">
        <!--控制台日志 -->
        <appender-ref ref="consoleLog"/>
        <appender-ref ref="fileErrorLog"/>
    </root>

    <!-- 指定项目中某个包，当有日志操作行为时的日志记录级别 -->
    <!-- com.appley为根包，也就是只要是发生在这个根包下面的所有日志操作行为的权限都是DEBUG -->
    <!-- 级别依次为【从高到低】：FATAL > ERROR > WARN > INFO > DEBUG > TRACE  -->
    <!-- <logger name="com.unisco.controller" level="ERROR">      
        <appender-ref ref="fileErrorLog" />      
    </logger> -->


</configuration>